exports.id=0,exports.modules={"./src/server/server.js":function(e,s,t){"use strict";t.r(s);var o=t("../build/contracts/FlightSuretyApp.json"),r=t("./src/server/config.json"),a=t("web3"),l=t.n(a),n=t("express"),c=t.n(n);let d=r.localhost,i=new l.a(new l.a.providers.WebsocketProvider(d.url.replace("http","ws"))),u=new i.eth.Contract(o.abi,d.appAddress),T=t("bignumber.js"),g=[],m=[{label:"STATUS_CODE_UNKNOWN",code:0},{label:"STATUS_CODE_ON_TIME",code:10},{label:"STATUS_CODE_LATE_AIRLINE",code:20},{label:"STATUS_CODE_LATE_WEATHER",code:30},{label:"STATUS_CODE_LATE_TECHNICAL",code:40},{label:"STATUS_CODE_LATE_OTHER",code:50}];!async function(){const e=await u.methods.REGISTRATION_FEE().call(),s=await i.eth.getAccounts();for(let t=11;t<41;t++){await u.methods.registerOracle().send({from:s[t],value:e,gas:3e6});const o=await u.methods.getMyIndexes().call({from:s[t]});g.push({address:s[t],indexes:o}),console.log(`Oracle ${s[t]} registered: ${o}`)}}(),u.events.OracleRequest({fromBlock:"latest"},(async function(e,s){e&&console.log(e);let t=s.returnValues.airline,o=s.returnValues.flight,r=new T(s.returnValues.timestamp),a=!1,l=m[1];console.log(`Flight scheduled to: ${new Date(r.toNumber())}`),new Date(r.toNumber())<Date.now()&&(l=m[2]),g.forEach(e=>{if(a)return!1;for(let s=0;s<3;s+=1)u.methods.submitOracleResponse(e.indexes[s],t,o,r.toNumber(),l.code).send({from:e.address,gas:4e6}).then(t=>{a=!0,console.log(`Oracle: ${e.indexes[s]} responded from flight ${o} with status ${l.code} - ${l.label}`)}).catch(e=>{console.log(e.message)})})}));const E=c()();E.get("/api",(e,s)=>{s.send({message:"An API for use with your Dapp!"})}),s.default=E},"regenerator-runtime":!1};